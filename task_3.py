# Есть два списка: tutors = [ 'Иван', 'Анастасия', 'Петр', 'Сергей', 'Дмитрий', 'Борис', 'Елена' ] klasses = [ '9А',
# '7В', '9Б', '9В', '8Б', '10А', '10Б', '9А' ] Необходимо реализовать генератор, возвращающий кортежи вида (<tutor>,
# <klass>), например: ('Иван', '9А') ('Анастасия', '7В') ... Количество генерируемых кортежей не должно быть больше
# длины списка tutors. Если в списке klasses меньше элементов, чем в списке tutors, необходимо вывести последние
# кортежи в виде: (<tutor>, None), например: ('Станислав', None)
# Доказать, что вы создали именно генератор.
# Проверить его работу вплоть до истощения. Подумать, в каких ситуациях генератор даст эффект.


from itertools import zip_longest

tutors = [
    'Иван', 'Анастасия', 'Петр', 'Сергей',
    'Дмитрий', 'Борис', 'Елена'
]
klasses = [
    '9А', '7В', '9Б', '9В', '8Б'
]

iterator_list_t_k = zip_longest(tutors, klasses[:len(tutors)])

print(*iterator_list_t_k)

""" для  проверки работы вплоть до истощения раскомментировать строчку ниже """

# print(next(iterator_list_t_k))

""" Далее идет решение вариант 2 """

print("*" * 50)

print("Вариант 2")

print("*" * 50)


def gen_tk():
    i = 0
    while i < len(tutors):
        if i >= len(klasses):
            yield tutors[i], None
            i += 1
        else:
            yield tutors[i], klasses[i]
            i += 1


for j in gen_tk():
    print(j)

""" ИЛИ """

print("*" * 50)

print("ИЛИ")

print("*" * 50)


print(*gen_tk())

