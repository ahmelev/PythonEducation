# 5. Реализовать функцию get_jokes(), возвращающую n шуток, сформированных из трех случайных слов, взятых из трёх
# списков (по одному из каждого):

# nouns = ["автомобиль", "лес", "огонь", "город", "дом"]
# adverbs = ["сегодня", "вчера", "завтра", "позавчера", "ночью"]
# adjectives = ["веселый", "яркий", "зеленый", "утопичный", "мягкий"]

#         Например:

# >>> get_jokes(2)
# ["лес завтра зеленый", "город вчера веселый"]

# Документировать код функции.

# Сможете ли вы добавить еще один аргумент — флаг, разрешающий или запрещающий повторы слов в шутках (когда каждое
# слово можно использовать только в одной шутке)? Сможете ли вы сделать аргументы именованными?

import random

nouns = ["автомобиль", "лес", "огонь", "город", "дом"]
adverbs = ["сегодня", "вчера", "завтра", "позавчера", "ночью"]
adjectives = ["веселый", "яркий", "зеленый", "утопичный", "мягкий"]


# def get_jokes(n, flag="Нет"):
#     """
#
#     :param n: Количество создаваемых шуток
#     :param flag: Повторяем слова в шутках? Да/Нет
#     :return: Шутка готова
#
#     """
#
#     """ Проверяем, позволяют ли нам повторять слова в шутках """
#     if flag == "Да":
#         """ Нам разрешили повторять слова, бегаем по созданному диапазону в рамках числа, введенного пользователем """
#         for i in range(int(n)):
#             """ Создаем случайные шутки из списков """
#             print(f'{random.choice(nouns)}, {random.choice(adverbs)}, {random.choice(adjectives)}')
#     elif flag == "Нет":
#         """ Нам не разрешили повторять слова, бегаем по созданному диапазону в рамках числа, введенного пользователем"""
#         if int(n) < len(nouns):
#             """если число шуток меньше длинны справочника, то бегаем по созданному диапазону в рамках числа,
#             введенного пользователем, присваиваем случайное значение из справочников переменным и удаляем эти значения
#             из справочников """
#             for i in range(int(n)):
#                 a = random.choice(nouns)
#                 b = random.choice(adverbs)
#                 c = random.choice(adjectives)
#                 nouns.remove(a)
#                 adverbs.remove(b)
#                 adjectives.remove(c)
#                 print(f'{a}, {b}, {c}')
#         else:
#             """если число шуток больше длинны справочника, то бегаем по созданному диапазону в рамках длинны
#             справочника, присваиваем случайное значение из справочников переменным и удаляем эти значения из
#             справочников """
#             for i in range(int(len(nouns))):
#                 a = random.choice(nouns)
#                 b = random.choice(adverbs)
#                 c = random.choice(adjectives)
#                 nouns.remove(a)
#                 adverbs.remove(b)
#                 adjectives.remove(c)
#                 print(f'{a}, {b}, {c}')
#     else:
#         """ Если введи некорректное слово для повтора слов, выводим ошибку """
#         print("Вы ввели не регламентированное слово для повтора")
#
#
# """ Запуск функции """
# get_jokes(input("Какое количество шуток создаем?: "), flag=input("Повторять слова в шутках? (Да/Нет): "))

def get_jokes(n, flag=None):
    if flag:
        for i in range(int(n)):
            for a, b, c in zip(random.choices(nouns), random.choices(adverbs), random.choices(adjectives)):
                print(a, b, c)


""" Запуск функции """
get_jokes(3)
