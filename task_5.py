# 5. Реализовать функцию get_jokes(), возвращающую n шуток, сформированных из трех случайных слов, взятых из трёх
# списков (по одному из каждого):

# nouns = ["автомобиль", "лес", "огонь", "город", "дом"]
# adverbs = ["сегодня", "вчера", "завтра", "позавчера", "ночью"]
# adjectives = ["веселый", "яркий", "зеленый", "утопичный", "мягкий"]

#         Например:

# >>> get_jokes(2)
# ["лес завтра зеленый", "город вчера веселый"]

# Документировать код функции.

# Сможете ли вы добавить еще один аргумент — флаг, разрешающий или запрещающий повторы слов в шутках (когда каждое
# слово можно использовать только в одной шутке)? Сможете ли вы сделать аргументы именованными?

import random

nouns = ["автомобиль", "лес", "огонь", "город", "дом"]
adverbs = ["сегодня", "вчера", "завтра", "позавчера", "ночью"]
adjectives = ["веселый", "яркий", "зеленый", "утопичный", "мягкий"]
joke = []


def get_jokes(n, flag=True):
    """
    Функция для создания случайных шуток из трех списков

    :param n: количество шуток
    :param flag: по умолчанию True (уникальные шутки)
    :return: Готовые шутки
    """
    if flag:
        """ Нам не разрешили повторять слова """
        if int(n) <= len(nouns):
            """ Если количество нужных шуток меньше или равно длине списка """
            for i in range(int(n)):
                """ бегаем по спискам рамках созданного диапазона принятого числа и создаем случайные фразы """
                for a, b, c in zip(random.choices(nouns), random.choices(adverbs), random.choices(adjectives)):
                    """ удаляем использованные слова """
                    nouns.remove(a)
                    adverbs.remove(b)
                    adjectives.remove(c)
                    joke.append(f'{a} {b} {c}')
        else:
            """ Если количество нужных шуток больше длины списка """
            for i in range(int(len(nouns))):
                """ бегаем по спискам рамках созданного диапазона длинны списка и создаем случайные фразы """
                for a, b, c in zip(random.choices(nouns), random.choices(adverbs), random.choices(adjectives)):
                    """ удаляем использованные слова """
                    nouns.remove(a)
                    adverbs.remove(b)
                    adjectives.remove(c)
                    joke.append(f'{a} {b} {c}')
    else:
        """ Нам разрешили повторять слова """
        for i in range(int(n)):
            """ бегаем по спискам рамках созданного диапазона принятого числа и создаем случайные фразы """
            for a, b, c in zip(random.choices(nouns), random.choices(adverbs), random.choices(adjectives)):
                joke.append(f'{a} {b} {c}')
    return joke


""" Запуск функции, если не хотим учитывать уникальность, надо передать None в значение flag """
# get_jokes(3)
# get_jokes(5)
print(get_jokes(9999))
# get_jokes(3, flag=None)
# get_jokes(5, flag=None)
# get_jokes(15, flag=None)
